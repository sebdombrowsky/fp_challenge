@using Models

<div class="fpButtonRow">
  @if (NavigationModel.SortAscending)
  {
    <button @onclick="SortProducts">Sort by price &#x21E7;</button>
  }
  else
  {
    <button @onclick="SortProducts">Sort by price &#x21E9;</button>
  }
  <button @onclick="ChangeView">@(NavigationModel.IsDetailsView ? "Details " : "Bottles ")View</button>
  <button class="@(NavigationModel.FilterMoreExpensiveThan2 ? "filterButton" : "")" @onclick="FilterProducts">Filter less than 2€</button>
</div>

@code {
  [Parameter]
  public NavigationModel NavigationModel { get; set; }

  [Parameter]
  public EventCallback<NavigationModel> NavigationModelChanged { get; set; }

  async Task ChangeView()
  {
    NavigationModel.IsDetailsView = NavigationModel.IsDetailsView ? false : true;
    await NavigationModelChanged.InvokeAsync(NavigationModel);
  }

  async Task SortProducts()
  {
    NavigationModel.SortAscending = NavigationModel.SortAscending ? false : true;
    await NavigationModelChanged.InvokeAsync(NavigationModel);
  }

  async Task FilterProducts()
  {
    NavigationModel.FilterMoreExpensiveThan2 = NavigationModel.FilterMoreExpensiveThan2 ? false : true;
    await NavigationModelChanged.InvokeAsync(NavigationModel);
  }
}
